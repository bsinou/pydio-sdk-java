/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.core.api.cells.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * RestLogMessageCollection
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-30T14:51:15.861Z")
public class RestLogMessageCollection {
    @SerializedName("Logs")
    private List<LogLogMessage> logs = null;

    public RestLogMessageCollection logs(List<LogLogMessage> logs) {
        this.logs = logs;
        return this;
    }

    public RestLogMessageCollection addLogsItem(LogLogMessage logsItem) {
        if (this.logs == null) {
            this.logs = new ArrayList<LogLogMessage>();
        }
        this.logs.add(logsItem);
        return this;
    }

    /**
     * Get logs
     *
     * @return logs
     **/
    @ApiModelProperty(value = "")
    public List<LogLogMessage> getLogs() {
        return logs;
    }

    public void setLogs(List<LogLogMessage> logs) {
        this.logs = logs;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RestLogMessageCollection restLogMessageCollection = (RestLogMessageCollection) o;
        return Objects.equals(this.logs, restLogMessageCollection.logs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(logs);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RestLogMessageCollection {\n");

        sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

