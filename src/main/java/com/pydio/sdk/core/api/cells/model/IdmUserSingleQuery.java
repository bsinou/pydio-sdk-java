/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.core.api.cells.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * IdmUserSingleQuery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-30T14:51:15.861Z")
public class IdmUserSingleQuery {
  @SerializedName("Uuid")
  private String uuid = null;

  @SerializedName("Login")
  private String login = null;

  @SerializedName("Password")
  private String password = null;

  @SerializedName("GroupPath")
  private String groupPath = null;

  @SerializedName("Recursive")
  private Boolean recursive = null;

  @SerializedName("FullPath")
  private String fullPath = null;

  @SerializedName("AttributeName")
  private String attributeName = null;

  @SerializedName("AttributeValue")
  private String attributeValue = null;

  @SerializedName("AttributeAnyValue")
  private Boolean attributeAnyValue = null;

  @SerializedName("HasRole")
  private String hasRole = null;

  @SerializedName("NodeType")
  private IdmNodeType nodeType = null;

  @SerializedName("not")
  private Boolean not = null;

  public IdmUserSingleQuery uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public IdmUserSingleQuery login(String login) {
    this.login = login;
    return this;
  }

   /**
   * Get login
   * @return login
  **/
  @ApiModelProperty(value = "")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public IdmUserSingleQuery password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public IdmUserSingleQuery groupPath(String groupPath) {
    this.groupPath = groupPath;
    return this;
  }

   /**
   * Get groupPath
   * @return groupPath
  **/
  @ApiModelProperty(value = "")
  public String getGroupPath() {
    return groupPath;
  }

  public void setGroupPath(String groupPath) {
    this.groupPath = groupPath;
  }

  public IdmUserSingleQuery recursive(Boolean recursive) {
    this.recursive = recursive;
    return this;
  }

   /**
   * Get recursive
   * @return recursive
  **/
  @ApiModelProperty(value = "")
  public Boolean isRecursive() {
    return recursive;
  }

  public void setRecursive(Boolean recursive) {
    this.recursive = recursive;
  }

  public IdmUserSingleQuery fullPath(String fullPath) {
    this.fullPath = fullPath;
    return this;
  }

   /**
   * Get fullPath
   * @return fullPath
  **/
  @ApiModelProperty(value = "")
  public String getFullPath() {
    return fullPath;
  }

  public void setFullPath(String fullPath) {
    this.fullPath = fullPath;
  }

  public IdmUserSingleQuery attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

   /**
   * Get attributeName
   * @return attributeName
  **/
  @ApiModelProperty(value = "")
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }

  public IdmUserSingleQuery attributeValue(String attributeValue) {
    this.attributeValue = attributeValue;
    return this;
  }

   /**
   * Get attributeValue
   * @return attributeValue
  **/
  @ApiModelProperty(value = "")
  public String getAttributeValue() {
    return attributeValue;
  }

  public void setAttributeValue(String attributeValue) {
    this.attributeValue = attributeValue;
  }

  public IdmUserSingleQuery attributeAnyValue(Boolean attributeAnyValue) {
    this.attributeAnyValue = attributeAnyValue;
    return this;
  }

   /**
   * Get attributeAnyValue
   * @return attributeAnyValue
  **/
  @ApiModelProperty(value = "")
  public Boolean isAttributeAnyValue() {
    return attributeAnyValue;
  }

  public void setAttributeAnyValue(Boolean attributeAnyValue) {
    this.attributeAnyValue = attributeAnyValue;
  }

  public IdmUserSingleQuery hasRole(String hasRole) {
    this.hasRole = hasRole;
    return this;
  }

   /**
   * Get hasRole
   * @return hasRole
  **/
  @ApiModelProperty(value = "")
  public String getHasRole() {
    return hasRole;
  }

  public void setHasRole(String hasRole) {
    this.hasRole = hasRole;
  }

  public IdmUserSingleQuery nodeType(IdmNodeType nodeType) {
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @ApiModelProperty(value = "")
  public IdmNodeType getNodeType() {
    return nodeType;
  }

  public void setNodeType(IdmNodeType nodeType) {
    this.nodeType = nodeType;
  }

  public IdmUserSingleQuery not(Boolean not) {
    this.not = not;
    return this;
  }

   /**
   * Get not
   * @return not
  **/
  @ApiModelProperty(value = "")
  public Boolean isNot() {
    return not;
  }

  public void setNot(Boolean not) {
    this.not = not;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdmUserSingleQuery idmUserSingleQuery = (IdmUserSingleQuery) o;
    return Objects.equals(this.uuid, idmUserSingleQuery.uuid) &&
        Objects.equals(this.login, idmUserSingleQuery.login) &&
        Objects.equals(this.password, idmUserSingleQuery.password) &&
        Objects.equals(this.groupPath, idmUserSingleQuery.groupPath) &&
        Objects.equals(this.recursive, idmUserSingleQuery.recursive) &&
        Objects.equals(this.fullPath, idmUserSingleQuery.fullPath) &&
        Objects.equals(this.attributeName, idmUserSingleQuery.attributeName) &&
        Objects.equals(this.attributeValue, idmUserSingleQuery.attributeValue) &&
        Objects.equals(this.attributeAnyValue, idmUserSingleQuery.attributeAnyValue) &&
        Objects.equals(this.hasRole, idmUserSingleQuery.hasRole) &&
        Objects.equals(this.nodeType, idmUserSingleQuery.nodeType) &&
        Objects.equals(this.not, idmUserSingleQuery.not);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, login, password, groupPath, recursive, fullPath, attributeName, attributeValue, attributeAnyValue, hasRole, nodeType, not);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdmUserSingleQuery {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    groupPath: ").append(toIndentedString(groupPath)).append("\n");
    sb.append("    recursive: ").append(toIndentedString(recursive)).append("\n");
    sb.append("    fullPath: ").append(toIndentedString(fullPath)).append("\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    attributeValue: ").append(toIndentedString(attributeValue)).append("\n");
    sb.append("    attributeAnyValue: ").append(toIndentedString(attributeAnyValue)).append("\n");
    sb.append("    hasRole: ").append(toIndentedString(hasRole)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    not: ").append(toIndentedString(not)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

